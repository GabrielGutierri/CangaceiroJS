{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","ApplicationException","NegociacaoService","constructor","_http","obterNegociacoesDaSemana","get","then","dados","negociacoes","map","objeto","Date","data","quantidade","valor","err","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","obterNegociacoesDoPeriodo","periodo","Promise","all","reduce","novoArray","item","concat","sort","a","b","getTime","console","log"],"mappings":";;;;;;AAAOA,uB,sBAAAA,W;;AACCC,sB,iBAAAA,U;;AACCC,gC,uCAAAA,oB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAEIC,iB,GAAN,MAAMA,iBAAN,CAAuB;;AAE1BC,8BAAa;AACT,yBAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb;AACH;AACDM,2CAA0B;AACtB,2BAAO,KAAKD,KAAL,CAAWE,GAAX,CAAe,oBAAf,EAAqCC,IAArC,CACHC,SAAS;AACL,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAC1B,IAAIX,UAAJ,CAAe,IAAIY,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADgB,CAApB;AAEI,+BAAON,WAAP;AACP,qBALE,EAKDO,OAAK;AACH,8BAAM,IAAIf,oBAAJ,CAAyB,iDAAzB,CAAN;AACH,qBAPE,CAAP;AASH;;AAEDgB,mDAAkC;AAC9B,2BAAO,KAAKb,KAAL,CAAWE,GAAX,CAAe,sBAAf,EAAuCC,IAAvC,CACHC,SAAS;AACL,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAC1B,IAAIX,UAAJ,CAAe,IAAIY,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADgB,CAApB;AAEI,+BAAON,WAAP;AACP,qBALE,EAKDO,OAAK;AACH,8BAAM,IAAIf,oBAAJ,CAAyB,0DAAzB,CAAN;AACH,qBAPE,CAAP;AASH;;AAEDiB,oDAAmC;AAC/B,2BAAO,KAAKd,KAAL,CAAWE,GAAX,CAAe,uBAAf,EAAwCC,IAAxC,CACHC,SAAS;AACL,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAC1B,IAAIX,UAAJ,CAAe,IAAIY,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADgB,CAApB;AAEI,+BAAON,WAAP;AACP,qBALE,EAKDO,OAAK;AACH,8BAAM,IAAIf,oBAAJ,CAAyB,2DAAzB,CAAN;AACH,qBAPE,CAAP;AASH;;AAEKkB,yCAAN,GAAiC;AAAA;;AAAA;AAC7B,4BAAG;AACH,gCAAIC,UAAU,MAAMC,QAAQC,GAAR,CAAY,CAC5B,MAAKjB,wBAAL,EAD4B,EAE5B,MAAKY,gCAAL,EAF4B,EAG5B,MAAKC,iCAAL,EAH4B,CAAZ,CAApB;AAKA,mCAAOE,QACFG,MADE,CACK,UAACC,SAAD,EAAWC,IAAX;AAAA,uCAAoBD,UAAUE,MAAV,CAAiBD,IAAjB,CAApB;AAAA,6BADL,EACiD,EADjD,EAEFE,IAFE,CAEG,UAACC,CAAD,EAAGC,CAAH;AAAA,uCAASA,EAAEhB,IAAF,CAAOiB,OAAP,KAAmBF,EAAEf,IAAF,CAAOiB,OAAP,EAA5B;AAAA,6BAFH,CAAP;AAGC,yBATD,CAWA,OAAMd,GAAN,EAAU;AACNe,oCAAQC,GAAR,CAAYhB,GAAZ;AACA,kCAAM,IAAIf,oBAAJ,CAAyB,kDAAzB,CAAN;AACH;AAf4B;AAgBhC;;AAzDyB,a","file":"NegociacaoService.js","sourcesContent":["import{HttpService} from '../../util/HttpService.js';\r\nimport {Negociacao} from './Negociacao.js';\r\nimport { ApplicationException } from '../../ui/converters/ApplicationException.js';\r\n\r\nexport class NegociacaoService{\r\n\r\n    constructor(){\r\n        this._http = new HttpService();\r\n    }\r\n    obterNegociacoesDaSemana(){\r\n        return this._http.get('negociacoes/semana').then(\r\n            dados => {\r\n                const negociacoes = dados.map(objeto =>\r\n                    new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n                    return negociacoes;\r\n            },err=>{\r\n                throw new ApplicationException(\"Não foi possível obter as negociações da semana\");\r\n            }\r\n        );\r\n    }\r\n\r\n    obterNegociacoesDaSemanaAnterior(){\r\n        return this._http.get('negociacoes/anterior').then(\r\n            dados => {\r\n                const negociacoes = dados.map(objeto =>\r\n                    new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n                    return negociacoes;\r\n            },err=>{\r\n                throw new ApplicationException(\"Não foi possível obter as negociações da semana anterior\");\r\n            }\r\n        );\r\n    }\r\n\r\n    obterNegociacoesDaSemanaRetrasada(){\r\n        return this._http.get('negociacoes/retrasada').then(\r\n            dados => {\r\n                const negociacoes = dados.map(objeto =>\r\n                    new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n                    return negociacoes;\r\n            },err=>{\r\n                throw new ApplicationException(\"Não foi possível obter as negociações da semana retrasada\");\r\n            }\r\n        );\r\n    }\r\n\r\n    async obterNegociacoesDoPeriodo(){\r\n        try{\r\n        let periodo = await Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()\r\n        ]);\r\n        return periodo\r\n            .reduce((novoArray,item) => novoArray.concat(item), [])\r\n            .sort((a,b) => b.data.getTime() - a.data.getTime());\r\n        }          \r\n        \r\n        catch(err){\r\n            console.log(err);\r\n            throw new ApplicationException(\"Não foi possível obter as negociações do período\");\r\n        };\r\n    }\r\n        \r\n}\r\n"]}