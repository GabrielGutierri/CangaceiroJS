{"version":3,"sources":["../../app-src/util/ProxyFactory.js"],"names":["ProxyFactory","create","objeto","props","armadilha","console","log","Proxy","get","target","prop","receiver","_ehFuncao","includes","apply","arguments","set","value","updated","Reflect","fn","Function"],"mappings":";;;;;;gBAAaA,Y,GAAN,MAAMA,YAAN,CAAkB;AACrB,uBAAOC,MAAP,CAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,SAA7B,EAAuC;AACnC;AACA;AACAC,4BAAQC,GAAR,CAAYF,SAAZ,EAHmC,CAGX;AACxB,2BAAO,IAAIG,KAAJ,CAAUL,MAAV,EAAkB;AACrBM,4BAAIC,MAAJ,EAAYC,IAAZ,EAAkBC,QAAlB,EAA2B;AACvB;AACA;AACA;;AAEA;AACA,gCAAGX,aAAaY,SAAb,CAAuBH,OAAOC,IAAP,CAAvB,KACHP,MAAMU,QAAN,CAAeH,IAAf,CADA,EACqB;AACjB,uCAAO,YAAU;AACbL,4CAAQC,GAAR,CAAa,GAAEI,IAAK,uBAApB;AACAD,2CAAOC,IAAP,EAAaI,KAAb,CAAmBL,MAAnB,EAA2BM,SAA3B,EAFa,CAE0B;;AAEvCX,8CAAUK,MAAV;AACH,iCALD;AAMH,6BARD,MAQK;AACD,uCAAOA,OAAOC,IAAP,CAAP;AACH;AACJ,yBAlBoB;AAmBrBM,4BAAIP,MAAJ,EAAWC,IAAX,EAAgBO,KAAhB,EAAsBN,QAAtB,EAA+B;AAC3B,kCAAMO,UAAUC,QAAQH,GAAR,CAAYP,MAAZ,EAAmBC,IAAnB,EAAwBO,KAAxB,CAAhB;AACA,gCAAGd,MAAMU,QAAN,CAAeH,IAAf,CAAH,EAAyBN,UAAUK,MAAV;AACzB,mCAAOS,OAAP;AACH;AAvBoB,qBAAlB,CAAP;AAyBH;;AAED,uBAAON,SAAP,CAAiBQ,EAAjB,EAAoB;AAChB,2BAAO,OAAOA,EAAP,IAAc,OAAOC,QAA5B;AACH;AAlCoB,a","file":"ProxyFactory.js","sourcesContent":["export class ProxyFactory{\r\n    static create(objeto, props, armadilha){\r\n        //console.log(props); -> props = métodos do Negociacoes e Mensagem\r\n        //console.log(objeto); -> objeto = Negociacoes e Mensagem\r\n        console.log(armadilha); //-> armadilha = model;\r\n        return new Proxy(objeto, {\r\n            get(target, prop, receiver){\r\n                //target -> array de negociacoes (negociacoes[negociacao])\r\n                //target[prop] -> metodo que a minha negociacao chama (Adiciona, esvazia, inverteOrdem e paraArray)\r\n                //prop -> metodo que esta sendo chamado.\r\n                \r\n                //se o prop é uma função do meu objeto (Negociacoes) e está nos props que eu passei\r\n                if(ProxyFactory._ehFuncao(target[prop]) &&\r\n                props.includes(prop)){\r\n                    return function(){\r\n                        console.log(`${prop} disparou a armadilha`);\r\n                        target[prop].apply(target, arguments); //vou pegar minha negociacao e rodar o metodo do prop\r\n\r\n                        armadilha(target);\r\n                    }\r\n                }else{\r\n                    return target[prop];\r\n                }\r\n            },\r\n            set(target,prop,value,receiver){\r\n                const updated = Reflect.set(target,prop,value);\r\n                if(props.includes(prop)) armadilha(target);\r\n                return updated;\r\n            }   \r\n        });\r\n    }\r\n\r\n    static _ehFuncao(fn){\r\n        return typeof(fn) == typeof(Function);\r\n    }\r\n}"]}